@page "/News/Create"
@inject NavigationManager navigationManager
@using Newtonsoft.Json
@attribute [Authorize(Roles = "Moderator")]

<PageTitle>News</PageTitle>

<h1 style="text-align: center;">Create</h1>

<div class="container">
    <EditForm Model="news" OnValidSubmit="OnCreateSubmitAsync">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Name: </label>
                    <InputText name="text" @bind-Value=news.Title class="form-control" required />
                </div>
                <div class="form-group">
                    <label>Description: </label>
                    <InputText name="text" @bind-Value=news.Description class="form-control" required />
                </div>
                <div class="form-group">
                    <label>Creation Date: </label>
                    <InputDate name="date" @bind-Value=news.CreationDate class="form-control" required />
                </div>
                <div class="form-group">
                    <label class="form-label">Image Url</label>
                    <br>
                    <InputFile OnChange="@UploadImageChanged" class="form-control" required id="file" type="file"
                        name="file" accept="image/*" />
                </div>
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </div>
    </EditForm>
</div>

@code {
    public News news = new News
        {
            IsApproved = false
        };

    public NewsContent newsContent = new NewsContent();

    public class NewsContent
    {
        public News News { get; set; }
        public string? ImageFileName { get; set; }
        public byte[]? ImageFileContent { get; set; }
    }

    private async Task OnCreateSubmitAsync(EditContext editContext)
    {
        var httpClient = new HttpClient();

        newsContent.News = news;

        var settings = new Newtonsoft.Json.JsonSerializerSettings
            {
                TypeNameHandling = Newtonsoft.Json.TypeNameHandling.Objects,
                ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore,
                Formatting = Newtonsoft.Json.Formatting.Indented
            };

        var newsContentJson = Newtonsoft.Json.JsonConvert.SerializeObject(newsContent, settings);

        var loginResponse = await httpClient.PostAsJsonAsync($"http://localhost:5182/api/News/Create/", newsContentJson);

        if (loginResponse.IsSuccessStatusCode && loginResponse.StatusCode == System.Net.HttpStatusCode.OK)
        {
            navigationManager.NavigateTo("/News/");
        }
    }

    private async Task UploadImageChanged(InputFileChangeEventArgs e)
    {
        Stream stream = e.File.OpenReadStream();

        MemoryStream ms = new MemoryStream();

        await stream.CopyToAsync(ms);

        stream.Close();

        newsContent.ImageFileName = e.File.Name;

        newsContent.ImageFileContent = ms.ToArray();

        ms.Close();
    }
}