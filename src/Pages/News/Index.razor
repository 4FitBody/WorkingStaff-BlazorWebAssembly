@page "/News/"
@using System.Text.Json
@inject NavigationManager navigationManager
@inject HttpClient Http
@attribute [Authorize(Roles = "admin, nutritionist, trainer,moderator")]

<PageTitle>News</PageTitle>

<h1 style="text-align: center;">ALL News</h1>

@if (news == null)
{
    <p><em>Loading...</em></p>
}

else
{
    <div class="container">

        <div class="row">
            @foreach (var pair in news)
            {
                if (pair.IsApproved)
                {
                    <div class="col-md-4">
                        <div class="card mb-4 shadow-sm">
                            <form id="@pair.Id">

                                <img src="@pair.ImageUrl" class="card-img-top" alt="newsCover">

                                <div class="card-body">
                                    <button type="button" class="button-link" onclick="">@pair.Title</button>
                                </div>

                                <button type="button" class="btn btn-danger" @onclick="DeletenewsAsync">Delete</button>
                                <button type="button" class="btn btn-primary"
                                    @onclick='() => navigationManager.NavigateTo($"/News/Update/{pair.Id}")'> Change </button>
                            </form>
                        </div>
                    </div>
                }
            }
        </div>

        <NavLink class="nav-link" href="News/Create">
            <span class="oi oi-plus" aria-hidden="true"></span> Add news
        </NavLink>
    </div>
}


@code {
    private List<News>? news;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();

        var response = await httpClient.GetAsync("");
        var content = await response.Content.ReadAsStringAsync();

        if (!response.IsSuccessStatusCode)
        {
            throw new ApplicationException(content);
        }

        news = JsonSerializer.Deserialize<List<News>>(content);
    }

    private async Task DeletenewsAsync()
    {
        var httpClient = new HttpClient();

        var loginResponse = await httpClient.DeleteAsync("");

        if (loginResponse.IsSuccessStatusCode && loginResponse.StatusCode == System.Net.HttpStatusCode.OK)
        {
            navigationManager.NavigateTo("/News/");
        }
    }
}