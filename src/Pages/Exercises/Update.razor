@page "/Exercise/Update/{Id:int}"
@using System.Text.Json
@using Newtonsoft.Json
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Trainer")]

<PageTitle>Exercise</PageTitle>

<h1 style="text-align: center;">Update</h1>



<EditForm Model="exercise" OnValidSubmit="OnUpdateSubmitAsync">

    <div class="mb-3">
        <label class="form-label">Name: </label>
        <InputText required name="text" @bind-Value=exercise.Name class="form-control" />
    </div>

    <div class="mb-3">
        <label class="form-label">Body part: </label>
        <InputText required name="text" @bind-Value=exercise.BodyPart class="form-control" />
    </div>

    <div class="mb-3">
        <label class="form-label">Equipment: </label>
        <InputText required name="text" @bind-Value=exercise.Equipment class="form-control" />
    </div>

    <div class="mb-3">
        <label class="form-label">Target: </label>
        <InputText required name="text" @bind-Value=exercise.Target class="form-control" />
    </div>

    <br>

    <button type="submit" class="btn btn-primary">Update exercise</button>
</EditForm>


@code {
    public Exercise exercise = new Exercise();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();

        var response = await httpClient.GetAsync($"http://exerciseapiapp:10010/api/Exercise/Details/{Id}");
        
        var content = await response.Content.ReadAsStringAsync();

        if (!response.IsSuccessStatusCode)
        {
            throw new ApplicationException(content);
        }
#pragma warning disable CS8601
        exercise = JsonConvert.DeserializeObject<Exercise>(content);

    }

    private async Task OnUpdateSubmitAsync(EditContext editContext)
    {
        var httpClient = new HttpClient();

        var loginResponse = await httpClient.PutAsJsonAsync($"http://exerciseapiapp:10010/api/Exercise/Update/{Id}", exercise);

        if (loginResponse.IsSuccessStatusCode && loginResponse.StatusCode == System.Net.HttpStatusCode.OK)
        {
            navigationManager.NavigateTo("/Exercise/");
        }
    }
}