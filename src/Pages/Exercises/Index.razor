@page "/Exercise/"
@using System.Text.Json
@inject NavigationManager navigationManager
@inject HttpClient Http
@attribute [Authorize(Roles = "Admin, Nutritionist, Trainer,Moderator")]

<PageTitle>Exercise</PageTitle>

<h1 style="text-align: center;">ALL Exercise</h1>

@if (exercise == null)
{
    <p><em>Loading...</em></p>
}

else
{
    <AuthorizeView Context="Exercise" Roles="Admin,Trainer,Nutritionist">
        <div class="container">

            <div class="row">
                @foreach (var pair in exercise)
                {
                    if (pair.IsApproved)
                    {
                        <div class="col-md-4">
                            <div class="card mb-4 shadow-sm">
                                <form id="@pair.Id">

                                    <img src="@pair.GifUrl" class="card-img-top" alt="ExerciseCover">

                                    <div class="card-body">
                                        <a href="/Exercise/GetById/{@pair.Id}">pair.Name</a>
                                    </div>

                                    <AuthorizeView Roles="Trainer">
                                        <button type="button" class="btn btn-danger"
                                            @onclick='()=>DeleteExerciseAsync(pair.Id)'>Delete</button>
                                        <button type="button" class="btn btn-primary"
                                            @onclick='() => navigationManager.NavigateTo($"/Exercise/Update/{pair.Id}")'> Change
                                        </button>
                                    </AuthorizeView>
                                </form>
                            </div>
                        </div>
                    }
                }
            </div>

            <AuthorizeView Roles="Trainer">
                <NavLink class="nav-link" href="Exercise/Create">
                    <span class="oi oi-plus" aria-hidden="true"></span> Add Exercise
                </NavLink>
            </AuthorizeView>
        </div>
    </AuthorizeView>
}


@code {
    private List<Exercise>? exercise;

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();

        var response = await httpClient.GetAsync($"http://localhost:5149/api/Exercise/Index");
        var content = await response.Content.ReadAsStringAsync();

        if (!response.IsSuccessStatusCode)
        {
            throw new ApplicationException(content);
        }

        exercise = JsonSerializer.Deserialize<List<Exercise>>(content);
    }

    private async Task DeleteExerciseAsync(int Id)
    {
        var httpClient = new HttpClient();

        var loginResponse = await httpClient.DeleteAsync($"http://localhost:5149/api/Exercise/Delete/{Id}");

        if (loginResponse.IsSuccessStatusCode && loginResponse.StatusCode == System.Net.HttpStatusCode.OK)
        {
            navigationManager.NavigateTo("/Exercise/");
        }
    }

    private async Task UpdateStatusAsync(int Id)
    {
        var httpClient = new HttpClient();

        var loginResponse = await httpClient.PutAsJsonAsync<Exercise>($"http://localhost:5149/api/Moderation/ApproveExercise/{Id}", null);

        if (loginResponse.IsSuccessStatusCode && loginResponse.StatusCode == System.Net.HttpStatusCode.OK)
        {
            navigationManager.NavigateTo("/Exercise/");
        }
    }
}