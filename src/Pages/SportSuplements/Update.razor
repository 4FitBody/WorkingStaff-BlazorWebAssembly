@page "/Supplements/Update/{Id:int}"
@using System.Text.Json
@inject NavigationManager navigationManager
@using Newtonsoft.Json
@attribute [Authorize(Roles = "Moderator")]

<PageTitle>Supplements</PageTitle>

<h1 style="text-align: center;">Update</h1>

<EditForm Model="supplement" OnValidSubmit="OnUpdateSubmitAsync">
    <div class="mb-3">
        <label class="form-label">Title: </label>
        <InputText required name="text" @bind-Value=supplement.Name class="form-control" />
    </div>

    <div class="mb-3">
        <label class="form-label">Description: </label>
        <InputTextArea required name="text" @bind-Value=supplement.Description class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Update supplement</button>
</EditForm>


@code {
    public SportSupplement supplement = new SportSupplement();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();

        var response = await httpClient.GetAsync($"http://supplementapiapp:9090/api/SportSupplement/Details/{Id}");

        var content = await response.Content.ReadAsStringAsync();

        if (!response.IsSuccessStatusCode)
        {
            throw new ApplicationException(content);
        }

#pragma warning disable CS8601
        supplement = JsonConvert.DeserializeObject<SportSupplement>(content);
#pragma warning restore CS8601
    }

    private async Task OnUpdateSubmitAsync(EditContext editContext)
    {
        var httpClient = new HttpClient();

        var loginResponse = await httpClient.PutAsJsonAsync($"http://supplementapiapp:9090/api/SportSupplement/Update/{Id}", supplement);

        if (loginResponse.IsSuccessStatusCode && loginResponse.StatusCode == System.Net.HttpStatusCode.OK)
        {
            navigationManager.NavigateTo("/Supplements/");
        }
    }
}